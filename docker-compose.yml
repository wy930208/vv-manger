version: '3.8'

services:
  # 数据库服务
  mysql:
    image: mysql:8.0
    container_name: vv-manager-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: vv_manager
      MYSQL_USER: wy
      MYSQL_PASSWORD: wy930028
      # 添加字符集环境变量
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # 添加SQL初始化脚本挂载
      - ./packages/server/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-character-set=utf8mb4
      --init-connect='SET NAMES utf8mb4;'
      --innodb-flush-log-at-trx-commit=0
      --sync-binlog=0
    networks:
      - vv-manager-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 后端服务
  server:
    build:
      context: .
      dockerfile: ./packages/server/Dockerfile
    container_name: vv-manager-server
    restart: always
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=wy
      - DB_PASSWORD=wy930028
      - DB_DATABASE=vv_manager
      - JWT_SECRET=your-jwt-secret-key-change-this-in-production
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - vv-manager-network

  # 前端服务
  web:
    build:
      context: .
      dockerfile: ./packages/web/Dockerfile
    container_name: vv-manager-web
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - server
    networks:
      - vv-manager-network

volumes:
  mysql_data:
    name: vv-manager-mysql-data

networks:
  vv-manager-network:
    name: vv-manager-network
    driver: bridge